{"Id":"Problems/leetcode-200","Type":2,"Author":"","Content":{"Tag":"","Raw":"\n\u6DF1\u5EA6\u4F18\u5148\u641C\u7D22\u6C42\u56DB\u8054\u901A\u5757\u3002\n\n\u0060\u0060\u0060python\nclass Solution:\n    def dfs(self, grid, n, m, x, y):\n        if x \u003C 0 or y \u003C 0 or x \u003E= n or y \u003E= m or grid[x][y] == \u00270\u0027:\n            return\n        grid[x][y] = \u00270\u0027\n        for dx, dy in self.d:\n            self.dfs(grid, n, m, x\u002Bdx, y\u002Bdy)\n\n    def numIslands(self, grid: List[List[str]]) -\u003E int:\n        self.d = [(-1, 0), (1, 0), (0, -1), (0, 1)]\n        n = len(grid)\n        if n == 0:\n            return 0\n        m = len(grid[0])\n        ans = 0\n        for i in range(n):\n            for j in range(m):\n                if grid[i][j] == \u00271\u0027:\n                    ans \u002B= 1\n                    self.dfs(grid, n, m, i, j)\n        return ans\n\u0060\u0060\u0060"},"Title":"LeetCode-200 \u5C9B\u5C7F\u6570\u91CF","Category":{"Items":["Problems"]},"Keywords":{"Items":["leetcode"]},"CreationTime":"2020-07-28T16:53:24+08:00","ModificationTime":"2020-07-28T16:53:24+08:00"}