{"Id":"Problems/leetcode-1530","Type":2,"Author":"","Content":{"Tag":"","Raw":"\n\u9884\u5904\u7406\u7ED3\u70B9\u6DF1\u5EA6\uFF0C\u500D\u589E\u6C42\u6700\u8FD1\u516C\u5171\u7956\u5148\uFF0C\u679A\u4E3E\u53F6\u5B50\u8282\u70B9\u5BF9\u5373\u53EF\u3002\n\n\u0060\u0060\u0060cpp\nconst int POW = 15;\nclass Solution\n{\n    int tot = 0;\n    int dep[2000];\n    TreeNode *pa[2000][15];\n    TreeNode *leaves[2000];\n    int leaf_cnt = 0;\n    void dfs(TreeNode *u, TreeNode *fa)\n    {\n        u-\u003Eval = \u002B\u002Btot;\n        dep[u-\u003Eval] = dep[fa-\u003Eval] \u002B 1;\n        pa[u-\u003Eval][0] = fa;\n        for (int i = 1; i \u003C POW; i\u002B\u002B)\n            pa[u-\u003Eval][i] = pa[pa[u-\u003Eval][i - 1]-\u003Eval][i - 1];\n        if (u-\u003Eleft != nullptr)\n        {\n            dfs(u-\u003Eleft, u);\n        }\n        if (u-\u003Eright != nullptr)\n        {\n            dfs(u-\u003Eright, u);\n        }\n        if (u-\u003Eleft == nullptr \u0026\u0026 u-\u003Eright == nullptr)\n        {\n            leaves[leaf_cnt] = u;\n            leaf_cnt\u002B\u002B;\n        }\n    }\n    TreeNode *lca(TreeNode *a, TreeNode *b)\n    {\n        if (dep[a-\u003Eval] \u003C dep[b-\u003Eval])\n            swap(a, b);\n        int h = dep[a-\u003Eval] - dep[b-\u003Eval];\n        for (int i = 0; i \u003C POW; i\u002B\u002B)\n            if (h \u003E\u003E i \u0026 1)\n                a = pa[a-\u003Eval][i];\n        if (a == b)\n            return a;\n        else\n        {\n            for (int i = POW - 1; i \u003E= 0; i--)\n                if (pa[a-\u003Eval][i] != pa[b-\u003Eval][i])\n                    a = pa[a-\u003Eval][i], b = pa[b-\u003Eval][i];\n            return a == b ? a : pa[a-\u003Eval][0];\n        }\n    }\n\npublic:\n    int countPairs(TreeNode *root, int distance)\n    {\n        tot = 0;\n        TreeNode *nil = new TreeNode();\n        dep[0] = 0;\n        for (int i = 0; i \u003C POW; i\u002B\u002B)\n            pa[0][i] = nil;\n        dfs(root, nil);\n        int ans = 0;\n        for (int i = 0; i \u003C leaf_cnt; i\u002B\u002B)\n        {\n            for (int j = i \u002B 1; j \u003C leaf_cnt; j\u002B\u002B)\n            {\n                TreeNode *l = lca(leaves[i], leaves[j]);\n                if (dep[leaves[i]-\u003Eval] \u002B dep[leaves[j]-\u003Eval] - 2 * dep[l-\u003Eval] \u003C= distance)\n                {\n                    ans\u002B\u002B;\n                }\n            }\n        }\n        return ans;\n    }\n};\n\u0060\u0060\u0060"},"Title":"LeetCode-1530 \u597D\u53F6\u5B50\u8282\u70B9\u5BF9\u7684\u6570\u91CF","Category":{"Items":["Problems"]},"Keywords":{"Items":["leetcode"]},"CreationTime":"2020-07-28T14:30:28+08:00","ModificationTime":"2020-07-28T14:30:28+08:00"}