{"Id":"Problems/leetcode-110","Type":2,"Author":"","Content":{"Tag":"","Raw":"\n\u6309\u5B9A\u4E49\u9012\u5F52\u5224\u65AD\u3002\n\n\u0060\u0060\u0060python\nclass Solution:\n    def check(self, root: TreeNode, dep) -\u003E (bool, int):\n        if root == None:\n            return True, dep\n        fl, l = self.check(root.left, dep\u002B1)\n        fr, r = self.check(root.right, dep\u002B1)\n        return fl and fr and abs(r-l) \u003C= 1, max(l, r)\n\n    def isBalanced(self, root: TreeNode) -\u003E bool:\n        return self.check(root, 0)[0]\n\u0060\u0060\u0060"},"Title":"LeetCode-110 \u5E73\u8861\u4E8C\u53C9\u6811","Category":{"Items":["Problems"]},"Keywords":{"Items":["leetcode"]},"CreationTime":"2020-07-28T16:53:26+08:00","ModificationTime":"2020-07-28T16:53:26+08:00"}