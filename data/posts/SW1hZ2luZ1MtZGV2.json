{"Id":"ImagingS-dev","Type":0,"AuthorId":"","Content":{"Tag":"","Raw":"\n# ImagingS \u5F00\u53D1\u7B14\u8BB0\n\n![](https://repository-images.githubusercontent.com/226446069/77831900-b856-11ea-95ef-6fd6c38a9edc)\n\n- [Demo Video](https://www.bilibili.com/video/BV1Q54y1i7Lg/)\n\n![](https://www.bilibili.com/video/BV1Q54y1i7Lg/)\n\n## \u6765\u6E90\n\n\u6700\u521D\u7684\u60F3\u6CD5\u6765\u81EA [\u8BA1\u7B97\u673A\u56FE\u5F62\u5B66\u7684\u8BFE\u7A0B\u9879\u76EE\u4F5C\u4E1A](https://git.nju.edu.cn/songyc/cg2020a)\uFF0C\u5176\u8981\u6C42\u57FA\u4E8E Python \u002B Qt \u5B9E\u73B0\u4E00\u4E2A\u652F\u6301\u7B80\u5355\u56FE\u5143\u7ED8\u5236\u7684 GUI\u002BCLI \u7A0B\u5E8F\u3002\n\n\u4E4B\u524D\u4E00\u822C\u4EC5\u4F7F\u7528 Python \u5199\u4E00\u4E9B\u7B80\u5355\u7684\u5C0F\u578B\u9879\u76EE\u3002\u66FE\u5199\u8FC7\u4E00\u4E2A[\u8F83\u5927\u9879\u76EE](https://github.com/eXceediDeaL/edl-coderunner)\uFF0C\u4F46\u5373\u4F7F\u4F7F\u7528\u4E86\u7C7B\u578B\u6807\u6CE8\uFF0C\u4E5F\u5F88\u5FEB\u968F\u7740\u9879\u76EE\u590D\u6742\u5EA6\u7684\u63D0\u5347\uFF0C\u9047\u5230\u4E86\u7EF4\u62A4\u74F6\u9888\uFF0C\u5927\u5927\u5F71\u54CD\u5F00\u53D1\u6548\u7387\uFF0C\u9042\u4E2D\u65AD\u4E86\u5F00\u53D1\u3002\n\n\u8FD9\u6B21\u662F\u7B2C\u4E00\u6B21\u4F7F\u7528 Python \u5F00\u53D1\u56FE\u5F62\u7528\u6237\u754C\u9762\u7684\u8F6F\u4EF6\uFF0C\u4E5F\u662F\u7B2C\u4E00\u6B21\u4F7F\u7528 Qt\uFF0C\u8003\u8651\u5230\u8FD9\u4E2A\u9879\u76EE\u7684\u9700\u6C42\u8F83\u4E3A\u660E\u786E\u5E76\u4E14\u6709\u8DB3\u591F\u7684\u6269\u5C55\u53EF\u80FD\uFF0C\u51B3\u5B9A\u5C06\u6B64\u9879\u76EE\u4F5C\u4E3A\u4E00\u4E2A Python \u8F83\u5927\u5355\u4EBA\u9879\u76EE\u7684\u7EC3\u624B\uFF0C\u5E76\u89C4\u907F\u4EE5\u524D Python \u9879\u76EE\u9047\u5230\u7684\u4E00\u4E9B\u95EE\u9898\u3002\n\n## Idea\n\n\u6839\u636E\u8BFE\u7A0B\u9879\u76EE\u7684\u6A21\u677F\u4EE3\u7801\uFF0C\u53D1\u73B0\u6B64\u9879\u76EE\u975E\u5E38\u9002\u5408 OOP \u6A21\u5F0F\u8BBE\u8BA1\u3002\u7ED3\u5408\u4EE5\u524D\u7684 [WPF](https://github.com/dotnet/wpf) \u5B66\u4E60\u7ECF\u5386\uFF0C\u51B3\u5B9A\u4F9D\u7167 WPF \u7684\u8BBE\u8BA1\u601D\u8DEF\uFF0C\u8BD5\u56FE\u5728 ImagingS \u4E2D\u590D\u523B WPF \u7684\u5448\u73B0\u6A21\u578B\u3002\n\n![](/assets/posts/ImagingS-dev/design.png)\n\n1. \u56FE\u5143 Geometry \u5BF9\u8C61\u63CF\u8FF0\u56FE\u5143\u53CA\u5176\u7ED8\u5236\u7B97\u6CD5\n2. \u7ED8\u56FE Drawing \u5C06\u5404\u79CD\u56FE\u5143\u7ED8\u5236\u5230 DrawingContext \u4E0A\n3. \u7ED8\u56FE\u4E0A\u4E0B\u6587 DrawingContext \u63D0\u4F9B\u5177\u4F53\u7ED8\u56FE\u7684\u62BD\u8C61\uFF0C\u7EDF\u4E00 GUI \u7ED8\u56FE\u548C\u56FE\u7247\u6587\u4EF6\u7ED8\u56FE\u3002\n\n\u901A\u8FC7\u8FD9\u4E09\u4E2A\u5C42\u6B21\uFF0C\u5C06\u5448\u73B0\u7CFB\u7EDF\u7684\u4E24\u90E8\u5206\uFF1A\u5B9A\u4E49\u4E0E\u5448\u73B0\u5206\u79BB\u3002\n\n## \u8BBE\u8BA1\n\n\u6838\u5FC3\u7684 API \u96C6\u4E2D\u5728\u4EE5\u4E0B\u51E0\u4E2A\u7C7B\u4E2D\uFF0C\u5176\u4E2D\u4E0E\u7ED8\u5236\u62BD\u8C61\u76F8\u5173\u7684\u5927\u90E8\u5206\u7C7B\u5747\u80FD\u5728 WPF \u7ED8\u5236\u6A21\u578B\u4E2D\u627E\u5230\u5BF9\u5E94\u3002\n\n1. \u56FE\u5143\u7C7B\uFF1A\u5404\u79CD\u56FE\u5143\u7684\u57FA\u7C7B\uFF0C\u5B9A\u4E49\u4E86\u7ED8\u5236\u7B97\u6CD5\uFF08strokePoints\uFF09\u548C\u53D8\u6362\u3002\n\n\u0060\u0060\u0060python\nclass Geometry(PropertySerializable, ABC):\n    def __init__(self) -\u003E None: pass\n\n    def transform(self) -\u003E Optional[Transform]: pass\n\n    def strokePoints(self, pen: Pen) -\u003E Iterable[Point]: pass\n\n    def fillPoints(self) -\u003E Iterable[Point]: pass\n\n    def inStroke(self, pen: Pen, point: Point) -\u003E bool: pass\n\n    def inFill(self, point: Point) -\u003E bool: pass\n\n    def transformed(self) -\u003E Geometry: pass\n\n    def bounds(self) -\u003E Rect: pass\n\u0060\u0060\u0060\n\n2. \u7ED8\u5236\u7C7B\uFF1A\u6240\u6709\u53EF\u7ED8\u5236\u5143\u7D20\u7684\u57FA\u7C7B\uFF0C\u5B9A\u4E49\u4E86\u7ED8\u5236\u51FD\u6570\uFF08render\uFF09\u3002\u5BF9\u4E8E\u56FE\u5143\u5BF9\u8C61\uFF0C\u5B9E\u73B0\u4E86 GeometryDrawing \u6765\u5B9E\u9645\u5B8C\u6210\u56FE\u5143\u7684\u7ED8\u5236\u4EFB\u52A1\u3002\n\n\u0060\u0060\u0060python\nclass Drawing(PropertySerializable, IdObject, ABC):\n    def __init__(self) -\u003E None: pass\n\n    @abstractmethod\n    def render(self, context: RenderContext) -\u003E None: pass\n\n    @property\n    @abstractmethod\n    def bounds(self) -\u003E Rect: pass\n\u0060\u0060\u0060\n\n3. \u7ED8\u56FE\u4E0A\u4E0B\u6587\u7C7B\uFF1A\u5BF9\u5B9E\u9645\u7ED8\u5236\u7684\u76EE\u6807\u7684\u62BD\u8C61\n\n\u0060\u0060\u0060python\nclass RenderContext(ABC):\n    @abstractmethod\n    def _point(self, position: Point, color: Color) -\u003E None: pass\n\n    @abstractmethod\n    def bounds(self) -\u003E Rect: pass\n\n    def point(self, position: Point, color: Color) -\u003E None: pass\n\n    def points(self, positions: Iterable[Point], brush: Brush)\n     -\u003E None: pass\n\u0060\u0060\u0060\n\n4. \u53D8\u6362\u7C7B\uFF1A\u6240\u6709\u53D8\u6362\u7684\u57FA\u7C7B\uFF0C\u5B9A\u4E49\u4E86\u5982\u4F55\u5C06\u4E00\u4E2A\u70B9\u53D8\u6362\u5230\u53E6\u4E00\u4E2A\u70B9\n\n\u0060\u0060\u0060python\nclass Transform(PropertySerializable, IdObject, ABC):\n    def __init__(self) -\u003E None: pass\n\n    @abstractmethod\n    def transform(self, origin: Point) -\u003E Point: pass\n\u0060\u0060\u0060\n\n5. \u6587\u6863\u7C7B\uFF1A\u5B9A\u4E49\u4E86\u5F53\u524D\u6587\u6863\u6240\u5305\u542B\u7684\u753B\u5237\uFF0C\u56FE\u5143\uFF0C\u753B\u5E03\u5927\u5C0F\u7B49\u4FE1\u606F\uFF0C\u5B9E\u73B0\u4E86\u5E8F\u5217\u5316\u64CD\u4F5C\n\n\u0060\u0060\u0060python\nclass Document(PropertySerializable, IdObject):\n    def __init__(self) -\u003E None: pass\n\n    @property\n    def brushes(self) -\u003E IdObjectList[Brush]: pass\n\n    @property\n    def drawings(self) -\u003E DrawingGroup: pass\n\n    @property\n    def size(self) -\u003E Size: pass\n\n    def save(self, file, format: DocumentFormat = DocumentFormat.ISD)\n     -\u003E None: pass\n\n    @staticmethod\n    def load(file, format: DocumentFormat = DocumentFormat.ISD)\n     -\u003E Document: pass\n\u0060\u0060\u0060\n\n6. \u753B\u5E03\u7C7B\uFF1A\u5C06\u62BD\u8C61\u7ED8\u5236\u5BF9\u8C61\u5305\u88C5\u6210 Qt \u4E2D\u7684\u7ED8\u5236\u5BF9\u8C61\n\n\u0060\u0060\u0060python\nclass Canvas(QGraphicsView): pass\n\nclass DrawingItem(QGraphicsItem):\n    def __init__(self, drawing: Drawing, \n        size: QSizeF, parent: Optional[QGraphicsItem] = None): pass\n\u0060\u0060\u0060\n\n7. \u4EA4\u4E92\u7C7B\uFF1A\u5B9A\u4E49\u4E86 GUI \u4E0A\u4E0E\u56FE\u5143\u4EA4\u4E92\u7684\u6240\u6709\u64CD\u4F5C\uFF0C\u63D0\u4F9B\u7ED9\u753B\u5E03\u4E00\u4E2A\u7EDF\u4E00\u7684\u63A5\u53E3\u6765\u5904\u7406\u7528\u6237\u4EA4\u4E92\n\n\u0060\u0060\u0060python\nclass Interactivity(QObject):\n    started = pyqtSignal(QObject)\n    ended = pyqtSignal(QObject)\n    updated = pyqtSignal(QObject)\n\n    def __init__(self) -\u003E None: pass\n\n    def start(self) -\u003E None: pass\n\n    def end(self, success: bool) -\u003E None: pass\n\n    def update(self) -\u003E None: pass\n\n    @property\n    def viewItem(self) -\u003E Optional[QGraphicsItem]: pass\n\n    @property\n    def state(self) -\u003E InteractivityState: pass\n\n    def onMousePress(self, point: QPointF) -\u003E None: pass\n\n    def onMouseMove(self, point: QPointF) -\u003E None: pass\n\n    def onMouseRelease(self, point: QPointF) -\u003E None: pass\n\n    def onMouseDoubleClick(self, point: QPointF) -\u003E None: pass\n\n    def onKeyPress(self, key: QKeyEvent) -\u003E None: pass\n\n    def onKeyRelease(self, key: QKeyEvent) -\u003E None: pass\n\u0060\u0060\u0060\n\n## \u5B9E\u73B0\n\n- [ ] To be done\n\n## \u603B\u7ED3\n\n\u8FD9\u4E2A\u9879\u76EE\u501F\u9274\u4E86 WPF \u5448\u73B0\u6A21\u578B\u7684\u8BBE\u8BA1\uFF0C\u4E00\u4E2A\u6210\u719F\u7684\u6A21\u578B\u7684\u786E\u662F\u5BCC\u6709\u6269\u5C55\u6027\u548C\u8F83\u6613\u7EF4\u62A4\u7684\u3002Python \u002B Qt \u7684\u7EC4\u5408\u5F00\u53D1\u6548\u7387\u4E5F\u662F\u5F88\u9AD8\u7684\uFF0C\u4F46\u662F\u8FD0\u884C\u6548\u7387\u6709\u4E00\u5B9A\u635F\u5931\u3002\n\n\u9879\u76EE\u76EE\u524D\u7684\u4E3B\u8981\u4E0D\u8DB3\uFF0C\u4E00\u662F\u56FE\u5F62\u5B66\u76F8\u5173\u7B97\u6CD5\u5B9E\u73B0\u8F83\u5C11\uFF1B\u4E8C\u662F\u90E8\u5206\u7C7B\u7684 API \u8BBE\u8BA1\u4E0D\u591F\u51C6\u786E\uFF0C\u8FD9\u90E8\u5206\u53EF\u80FD\u6765\u6E90\u4E8E Qt \u7ED8\u56FE\u6A21\u578B\u548C WPF \u4F9D\u8D56\u7684 DirectX \u4E24\u8005\u7684\u4E0D\u4E00\u81F4\uFF0C\u590D\u523B\u7684\u8FC7\u7A0B\u4E2D\u90E8\u5206\u8BBE\u8BA1\u9700\u8981\u9002\u914D Qt \uFF0C\u9020\u6210\u4E00\u5B9A\u59A5\u534F\uFF08\u4F8B\u5982 PyQt \u7684\u7ED8\u5236\u6548\u7387\u4F4E\u4E0B\uFF0C\u5BFC\u81F4\u90E8\u5206\u529F\u80FD\u4E0D\u5BB9\u6613\u5728\u6B64\u6A21\u578B\u4E0B\u9AD8\u6548\u5B9E\u73B0\uFF09\u3002\n"},"Title":"ImagingS \u5F00\u53D1\u7B14\u8BB0","Category":{"Items":["Problems"]},"Keywords":{"Items":["dev"]},"CreationTime":"2020-07-14T17:30:22+08:00","ModificationTime":"2020-07-14T17:30:22+08:00"}