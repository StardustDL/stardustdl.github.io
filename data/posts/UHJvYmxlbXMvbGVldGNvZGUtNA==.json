{"Id":"Problems/leetcode-4","Type":2,"Author":"","Content":{"Tag":"","Raw":"\n\u7B80\u5355\u5F52\u5E76\u4E24\u4E2A\u6570\u7EC4\u3002\n\n\u0060\u0060\u0060python\nclass Solution:\n    def findMedianSortedArrays(self, nums1: List[int], nums2: List[int]) -\u003E float:\n        n, m = len(nums1), len(nums2)\n        is2 = (n\u002Bm) % 2 == 0\n        target = (n\u002Bm)//2 - (1 if is2 else 0)\n        cur = 0\n        i, j = 0, 0\n        ans = 0\n        while i \u003C n or j \u003C m:\n            l = 10**10 if i \u003E= n else nums1[i]\n            r = 10**10 if j \u003E= m else nums2[j]\n            if l \u003C r:\n                if cur == target:\n                    ans \u002B= l\n                elif cur == target \u002B 1 and is2:\n                    ans \u002B= l\n                cur \u002B= 1\n                i \u002B= 1\n            else:\n                if cur == target:\n                    ans \u002B= r\n                elif cur == target \u002B 1 and is2:\n                    ans \u002B= r\n                cur \u002B= 1\n                j \u002B= 1\n        return ans if not is2 else ans / 2\n\u0060\u0060\u0060"},"Title":"LeetCode-4 \u5BFB\u627E\u4E24\u4E2A\u6B63\u5E8F\u6570\u7EC4\u7684\u4E2D\u4F4D\u6570","Category":{"Items":["Problems"]},"Keywords":{"Items":["leetcode"]},"CreationTime":"2020-07-28T15:10:40+08:00","ModificationTime":"2020-07-28T15:10:40+08:00"}