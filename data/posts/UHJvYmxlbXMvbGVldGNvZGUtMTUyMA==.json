{"Id":"Problems/leetcode-1520","Type":0,"Author":"","Content":{"Tag":"","Raw":"\n\u5B50\u4E32\u7684\u8981\u6C42\u662F\u4E0D\u76F8\u4EA4\uFF0C\u4E14\u82E5\u4E00\u4E2A\u5B50\u5B57\u7B26\u4E32\u5305\u542B\u5B57\u7B26 \u0060c\u0060 \uFF0C\u90A3\u4E48 \u0060s\u0060 \u4E2D\u6240\u6709 \u0060c\u0060 \u5B57\u7B26\u90FD\u5E94\u8BE5\u5728\u8FD9\u4E2A\u5B50\u5B57\u7B26\u4E32\u4E2D\u3002\n\n\u5148\u627E\u51FA\u6EE1\u8DB3\u7B2C\u4E8C\u4E2A\u6761\u4EF6\u7684\u6240\u6709\u5B50\u4E32\uFF0C\u7531\u4E8E\u4E32\u4EC5\u7531\u5C0F\u5199\u5B57\u6BCD\u7EC4\u6210\uFF0C\u6309\u7167 \u0060s\u0060 \u4E2D\u6240\u6709 \u0060c\u0060 \u5B57\u7B26\u90FD\u5E94\u8BE5\u5728\u8FD9\u4E2A\u5B50\u5B57\u7B26\u4E32\u4E2D\u8FD9\u4E00\u8981\u6C42\uFF0C\u6700\u591A\u6709 26 \u4E2A\u5B50\u4E32\u3002\n\n1. \u9884\u5904\u7406\u51FA\u6BCF\u79CD\u5B57\u7B26\u7684\u7B2C\u4E00\u6B21\u51FA\u73B0\u548C\u6700\u540E\u4E00\u6B21\u51FA\u73B0\n2. \u8FED\u4EE3\u66F4\u65B0\u6BCF\u79CD\u5B57\u7B26\u76F8\u5173\u7684\u5B50\u4E32\u533A\u95F4\n\n\u95EE\u9898\u8F6C\u5316\u4E3A\u9009\u62E9\u5C3D\u91CF\u591A\u7684\u4E0D\u76F8\u4EA4\u5B50\u4E32\uFF0C\u4E14\u603B\u957F\u5EA6\u6700\u77ED\u3002\n\n\u7C7B\u4F3C\u542B\u4EF7\u503C\u7684\u7EBF\u6BB5\u6700\u5927\u4EF7\u503C\u8986\u76D6\u95EE\u9898\uFF0C\u4F7F\u7528\u52A8\u6001\u89C4\u5212\u89E3\u51B3\u3002\n\n1. \u6309\u7EBF\u6BB5\u53F3\u7AEF\u70B9\u5347\u5E8F\u6392\u5E8F\n2. \u8BBE \u0060j\u0060 \u662F\u5728 \u0060i\u0060 \u524D\u7684\u4E0E \u0060i\u0060 \u4E0D\u76F8\u4EA4\u7684\u5B50\u4E32\uFF0C$d_i$ \u4E3A \u524D \u0060i\u0060 \u4E2A\u5B50\u4E32\uFF0C\u4E14\u5305\u542B\u5B50\u4E32 \u0060i\u0060 \u7684\u6700\u5927\u4EF7\u503C\u548C\uFF0C$v_i$ \u4E3A\u5B50\u4E32 \u0060i\u0060 \u7684\u4EF7\u503C\u3002\u5219\u8F6C\u79FB\u65B9\u7A0B\u4E3A\n\n$$\nd_i = \\max \\{d_j \u002B v_i\\}\n$$\n\n\u7ED3\u679C\u5373\u4E3A $d$ \u4E2D\u7684\u6700\u5927\u503C\u3002\n\n\u672C\u9898\u4E2D\u4EF7\u503C\u5305\u542B\u4E24\u65B9\u9762\uFF1A\u6570\u91CF\u6700\u591A\uFF0C\u603B\u957F\u5EA6\u6700\u77ED\uFF0C\u53EF\u4EE5\u5982\u4E0B\u53D6\u4EF7\u503C\u51FD\u6570\uFF1A\n\n$$\nv_i = - \\text{len}_i \u002B 10\\times\\text{len}_S\n$$\n\n\u5176\u4E2D $\\text{len}_S$ \u662F\u539F\u4E32\u603B\u957F\u5EA6\u3002\n\n\u8F93\u51FA\u5177\u4F53\u65B9\u6848\uFF0C\u7EF4\u62A4\u6700\u4F18\u8F6C\u79FB\u4E2D\u7684\u4E0A\u4E00\u4E2A\u5B50\u4E32\u5373\u53EF\u3002\n\n\u0060\u0060\u0060cpp\nstruct seg\n{\n    int s, t, v;\n};\nbool cmp(seg a, seg b)\n{\n    return a.t \u003C b.t;\n}\n\nclass Solution\n{\npublic:\n    vector\u003Cstring\u003E maxNumOfSubstrings(string s)\n    {\n        vector\u003Cseg\u003E segs;\n        vector\u003Cint\u003E ans, mx;\n        int l = s.size();\n        int first[26], last[26];\n        for (int i = 0; i \u003C 26; i\u002B\u002B)\n        {\n            first[i] = l \u002B 1;\n            last[i] = -1;\n        }\n        for (int i = 0; i \u003C l; i\u002B\u002B)\n        {\n            int ch = s[i] - \u0027a\u0027;\n            first[ch] = min(first[ch], i);\n            last[ch] = max(last[ch], i);\n        }\n        for (int i = 0; i \u003C 26; i\u002B\u002B)\n        {\n            if (last[i] == -1)\n                continue;\n            while (true)\n            {\n                int tf = first[i], tl = last[i];\n                for (int j = tf; j \u003C= tl; j\u002B\u002B)\n                {\n                    int ch = s[j] - \u0027a\u0027;\n                    first[i] = min(first[ch], first[i]);\n                    last[i] = max(last[ch], last[i]);\n                }\n                if (first[i] == tf \u0026\u0026 last[i] == tl)\n                    break;\n            }\n        }\n        for (int i = 0; i \u003C 26; i\u002B\u002B)\n        {\n            if (last[i] == -1)\n                continue;\n            segs.push_back((seg){first[i], last[i], 10000000 - (last[i] - first[i] \u002B 1)});\n            mx.push_back(0);\n            ans.push_back(-1);\n        }\n        sort(segs.begin(), segs.end(), cmp);\n        mx[0] = segs[0].v;\n        for (int i = 1; i \u003C segs.size(); i\u002B\u002B)\n        {\n            printf(\u0022%d %d\\n\u0022, segs[i].s, segs[i].t);\n            mx[i] = segs[i].v;\n            ans[i] = -1;\n            for (int j = i - 1; j \u003E= 0; j--)\n            {\n                if (segs[j].t \u003C segs[i].s)\n                {\n                    if ((segs[i].v \u002B mx[j]) \u003E mx[i])\n                    {\n                        mx[i] = segs[i].v \u002B mx[j];\n                        ans[i] = j;\n                    }\n                }\n            }\n        }\n        int val = -1, pos = -1;\n        for (int i = 0; i \u003C segs.size(); i\u002B\u002B)\n        {\n            if (mx[i] \u003E val)\n            {\n                val = mx[i];\n                pos = i;\n            }\n        }\n        vector\u003Cstring\u003E result;\n        for (int i = pos; i != -1; i = ans[i])\n        {\n            seg \u0026g = segs[i];\n            result.push_back(s.substr(g.s, g.t - g.s \u002B 1));\n        }\n        return result;\n    }\n};\n\u0060\u0060\u0060"},"Title":"LeetCode-1520 \u6700\u591A\u7684\u4E0D\u91CD\u53E0\u5B50\u5B57\u7B26\u4E32","Category":{"Items":["Problems"]},"Keywords":{"Items":["leetcode"]},"CreationTime":"2020-07-19T12:30:25+08:00","ModificationTime":"2020-07-19T12:30:25+08:00"}